// Generated by IcedCoffeeScript 1.3.1b
(function() {

  define(['jquery'], function(jQuery) {
    var utils;
    utils = {};
    utils.dfdQuery = function(searchType, context, query, sort, page) {
      var entries;
      if (!query === void 0 || query === "") {
        entries = null;
        page = page || 1;
        utils.loadPrompt('Query category...');
        return jQuery.when(utils.fetchResults(searchType, query, sort, page)).then(jQuery.proxy(function(response) {
          context.setView(searchType);
          if (searchType === 'search' || searchType === void 0) {
            entries = response;
            melisting.routers.workspace.q = query;
            melisting.routers.workspace.p = page;
            melisting.routers.workspace.s = sort;
            jQuery('.search-meta p').html('Page: ' + response.length + ' / ' + response.length);
            context.resultView.collection.reset(entries);
            utils.changePage("#search", "slide", false, false);
            return utils.switchTitle(query + ' (Page ' + page + ' of ' + response.postitems.total + ')');
          } else {
            entries = response.postitems;
            context.collection.reset(entries);
            return utils.changePage("#postitem", "slide", false, false);
          }
        }, context));
      } else {
        return utils.loadPrompt('Please enter a valid search query.');
      }
    };
    utils.changePage = function(viewID, effect, direction, updateHash) {
      return jQuery.mobile.changePage(viewID, {
        transition: effect,
        reverse: direction,
        changeHash: updateHash
      });
    };
    utils.fetchResults = function(searchType, query, sort, page) {
      var quantity, serviceUrl;
      serviceUrl = "/api/postitems/:username/";
      if (searchType === 'search' || searchType === void 0) {
        quantity = jQuery('#slider').val() || melisting.defaults.resultsPerPage;
      } else if (searchType === 'postitem') {
        serviceUrl = "/api/postitems/:username/";
      }
      return jQuery.ajax(serviceUrl, {
        dataType: "json"
      });
    };
    utils.historySwitch = function(state) {
      var hashQuery, increment, pageQuery, sortQuery;
      sortQuery = hashQuery = "";
      pageQuery = increment = 0;
      hashQuery = melisting.routers.workspace.q || "";
      pageQuery = melisting.routers.workspace.p || 1;
      sortQuery = melisting.routers.workspace.s || "relevance";
      pageQuery = parseInt(pageQuery);
      if (state === 'next') {
        pageQuery += 1;
      } else {
        pageQuery -= 1;
      }
      if (pageQuery > 1) {
        return utils.changePage("/", "slide");
      } else {
        return location.hash = utils.queryConstructor(hashQuery, sortQuery, pageQuery);
      }
    };
    utils.loadPrompt = function(message) {
      message = message || "";
      return jQuery("<div class='ui-loader ui-overlay-shadow ui-body-e ui-corner-all'><h1>" + message + "</h1></div>").css({
        "display": "block",
        "opacity": 0.96,
        "top": jQuery(window).scrollTop() + 100
      }).appendTo(jQuery.mobile.pageContainer).delay(800).fadeOut(400, function() {
        return jQuery(this).remove();
      });
    };
    utils.switchTitle = function(title) {
      return jQuery('.ui-title').text(title || "");
    };
    utils.queryConstructor = function(query, sortType, page) {
      return 'search/' + query + '/s' + sortType + '/p' + page;
    };
    utils.toggleNavigation = function(toggleState) {
      melisting.ui.nextOption.toggle(toggleState);
      return melisting.ui.prevOption.toggle(toggleState);
    };
    utils.activePage = function() {
      return jQuery("ui-page-active");
    };
    utils.reapplyStyles = function(el) {
      el.find('ul[data-role]').listview();
      el.find('div[data-role="fieldcontain"]').fieldcontain();
      el.find('button[data-role="button"]').button();
      el.find('input,textarea').textinput();
      return el.page();
    };
    utils.redirectTo = function(page) {
      return jQuery.mobile.changePage(page);
    };
    utils.goBack = function() {
      return jQuery.historyBack();
    };
    return utils;
  });

}).call(this);
